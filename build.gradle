
plugins {
    id("org.springframework.boot") version "2.6.3"
    id 'jacoco'
    id "org.sonarqube" version "3.4.0.2513"

}

allprojects {

    apply plugin: 'java'
    apply plugin: 'war'



    group 'org.example'
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    dependencies {


        implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.0'
        implementation 'org.springframework.boot:spring-boot-starter-web:2.6.7'
        implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.7.0'
        implementation 'org.springframework.security:spring-security-core:5.7.1'
        implementation 'org.springframework.security:spring-security-config:5.7.1'
        implementation 'org.springframework.security:spring-security-web:5.7.1'
        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        implementation 'org.springframework.boot:spring-boot-starter:2.7.0'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.2'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.2'
        implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
        implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.7.0'
        implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.0'
        //testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.5.1'
        testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.22.0'
        testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.0'
        implementation 'org.springframework.security:spring-security-crypto:5.7.1'
        implementation 'org.springframework.security:spring-security-core:5.7.1'
        implementation 'org.springframework.security:spring-security-config:5.7.1'
        implementation 'org.springframework.security:spring-security-web:5.7.1'
        testImplementation 'org.springframework.security:spring-security-test:5.7.2'
        testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.1'
        implementation 'io.jsonwebtoken:jjwt:0.9.1'
        implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.7.0'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.7'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc:2.6.7'
        runtimeOnly 'mysql:mysql-connector-java:8.0.29'
        implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
        implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
        implementation 'org.springframework:spring-orm:5.3.19'

    }
}

sourceSets{
    main.java.srcDir "web/src/main"
    main.java.srcDir "core/src/main"
    main.java.srcDir "service/src/main"
    main.java.srcDir "security/src/main"

    main.resources.srcDirs 'core/src/main/resources'
    main.resources.srcDirs 'web/src/main/resources'
    main.resources.srcDirs 'service/src/main/resources'
    main.resources.srcDirs 'security/src/main/resources'
}


bootJar {
                mainClass = 'com.epam.esm.config.ControllerConfig'
}
bootWar.enabled(false)

war{
    archiveName("project.war")
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
    reports{
        xml.enabled(true)
    }
}